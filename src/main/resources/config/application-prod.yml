# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    datasource:
        url: jdbc:mysql://localhost:3306/java?useUnicode=true&characterEncoding=utf8&useSSL=true
        username: username
        password: password
        driver-class-name: com.mysql.jdbc.Driver

    redis:
        database: 0 # Redis数据库索引（默认为0）
        host: host
        port: 6379
        password: password # Redis服务器连接密码，默认为空，需要在redis的配置文件设置
        ssl: false # 启用SSL支持。
        lettuce:
            pool:
                max-active: 8 # 连接池最大连接数
                max-wait: -PT0.01S # 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量
                max-idle: 8 # 连接池中的最大空闲连接
                min-idle: 0 # 目标为保持在池中的最小空闲连接数。
        timeout: PT3.0S # 连接超时时间
        # 哨兵模式，不使用则不用开启
#        sentinel:
#            master: # Redis服务器的名称。
#            nodes: # 主机：端口对的逗号分隔列表。

        # 普通集群，不使用则不用开启，开启后将会覆盖基于单机的配置。
#        cluster:
#            max-redirects: # 在群集中执行命令时要遵循的最大重定向数目。
#            nodes: # （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。

application:
    cors:
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
        exposed-headers: "Authorization,Link,X-Total-Count"
        allow-credentials: true
        max-age: 1800
    security:
        authentication:
            jwt:
                secret: my-secret-token-to-change-in-production
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
    aliyun:
        sms:
            access-key: my-aliyun-sms-access-key-id
            access-secret: my-aliyun-sms-access-key-secret
            sign-name: my-aliyun-sms-sign-name
            templates:
                register: SMS_100000000
                login: SMS_100000000